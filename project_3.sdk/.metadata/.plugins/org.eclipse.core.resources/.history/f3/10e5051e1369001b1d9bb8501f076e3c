/*
 * a.c
 *
 *  Created on: 2021年2月7日
 *      Author: 72721
 */


#include "stdio.h"
#include "xparameters.h"
#include "xil_printf.h"
#include "breath_led.h"
#include "xil_io.h"
#include "sleep.h"

#define LED_IP_BASEADDR XPAR_BREATH_LED_0_S02_AXI_BASEADDR //LED IP 基地址
#define LED_IP_REG0 BREATH_LED_S02_AXI_SLV_REG0_OFFSET //LED IP 寄存器地址0
#define LED_IP_REG1 BREATH_LED_S02_AXI_SLV_REG1_OFFSET //LED IP 寄存器地址1

//main 函数
int main()
{
int freq_flag; //定义频率状态，用于循环改变呼吸灯的呼吸频率
int led_state; //定义LED 灯的状态
xil_printf("LED User IP Test!\n");
while(1){
//根据freq_flag 的标志位,切换呼吸灯的频率
if(freq_flag == 0){
BREATH_LED_IP_mWriteReg(LED_IP_BASEADDR,LED_IP_REG1,0x800000ef);
freq_flag = 1;
}
else{
BREATH_LED_IP_mWriteReg(LED_IP_BASEADDR,LED_IP_REG1,0x8000002f);
}
//获取LED 当前开关状态1:打开0:关闭
led_state = BREATH_LED_IP_mReadReg(LED_IP_BASEADDR,LED_IP_REG0);
//如果开关关闭,打开呼吸灯
if(led_state == 0){
BREATH_LED_IP_mWriteReg (LED_IP_BASEADDR, LED_IP_REG0, 1);
xil_printf("Breath LED ON\n");
}
sleep(5);
//获取LED 当前开关状态1:打开0:关闭
led_state = BREATH_LED_IP_mReadReg(LED_IP_BASEADDR,LED_IP_REG0);
//如果开关打开,关闭呼吸灯
if(led_state == 1){
BREATH_LED_IP_mWriteReg (LED_IP_BASEADDR, LED_IP_REG0, 0);
xil_printf("Breath LED OFF\n");
}
sleep(1);
}
}
